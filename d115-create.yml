---

# Provision virtual machine example

- hosts: localhost
  connection: local
  gather_facts: false

  vars:
    azure_image: OpenLogic:CentOS:7.1:7.1.20150731
    azure_location: eastus
    azure_prefix: d115
 
  vars_files:
    - secrets.yml

  tasks:

    - name: "erzeuge group"
      command: azure group create {{ azure_prefix }}-group -l {{ azure_location }}

    - name: "erzeuge master"
      command: azure vm create --nic-name {{ azure_prefix }}-nic --public-ip-name {{ azure_prefix }}-pip --image-urn {{ azure_image }} --admin-username azureuser --ssh-publickey-file ~/azure-key-pair.pub --location {{ azure_location }} --vnet-name {{ azure_prefix }}-vnet --vnet-address-prefix 10.0.0.0/24 --vnet-subnet-name {{ azure_prefix }}-subnet --vnet-subnet-address-prefix 10.0.0.0/27 --public-ip-domain-name {{ azure_prefix }}-master {{ azure_prefix }}-group {{ azure_prefix }}-master linux    

    - name: "add host to group"
      add_host: > 
        name=d115-master
        ansible_ssh_host=d115-master.eastus.cloudapp.azure.com
        ansible_ssh_port=22
        ansible_ssh_user=azureuser
        ansible_ssh_private_key_file=/home/ec2-user/azure-key-pair

- hosts: d115-master
  remote_user: azureuser
  sudo: true
  vars:
    deployer_user: workathomeuser
    deployer_user_ssh_key_file: .ssh/id_rsa
    bo_gitlab_key_title: automationathome
  vars_files:
    - secrets.yml

  tasks:
 
    - name: update all packages
      command: yum -y update

    - name: install yum packages
      yum: name={{ item }} state=latest 
      with_items:
#        - httpd24
        - httpd 
#        - php56  
        - php  
        - mysql 
#        - mysql55-server 
#        - php56-mysqlnd
        - php-mysqlnd

#[azureuser@d115-master ~]$ sudo yum list | grep mysql
#akonadi-mysql.x86_64                    1.9.2-4.el7                    base     
#apr-util-mysql.x86_64                   1.5.2-6.el7                    base     
#dovecot-mysql.x86_64                    1:2.2.10-4.el7_0.1             base     
#freeradius-mysql.x86_64                 3.0.4-6.el7                    base     
#libdbi-dbd-mysql.x86_64                 0.8.3-16.el7                   base     
#mysql-connector-java.noarch             1:5.1.25-3.el7                 base     
#mysql-connector-odbc.x86_64             5.2.5-6.el7                    base     
#php-mysql.x86_64                        5.4.16-36.el7_1                updates  
#php-mysqlnd.x86_64                      5.4.16-36.el7_1                updates  
#qt-mysql.i686                           1:4.8.5-8.el7                  base     
#qt-mysql.x86_64                         1:4.8.5-8.el7                  base     
#redland-mysql.x86_64                    1.0.16-6.el7                   base     
#rsyslog-mysql.x86_64                    7.4.7-7.el7_1.1                updates  
#[azureuser@d115-master ~]$ 



    - name: install git
      yum: name=git state=latest

    - name: install httplib2 (für gitlab notwendig)
      yum: name=python-httplib2 state=latest

    - name: install httplib2 (für uri, Zugriff auf gitlab)
      pip: name=httplib2

    # deploy-user immer löschen, dann neu 
    - name: erzeuge ssh-key
      user: name={{ deployer_user }} generate_ssh_key=yes 

    - name: Assign ssh key to a variable
      shell: cat /home/{{ deployer_user }}/{{ deployer_user_ssh_key_file }}.pub
      register: deployer_user_public_key

    # ist noch nicht idempotent, sollte abfragen, ob der Key so noch/schon existiert und diesen updaten/löschen und neu anlegen
    # ggf. auch so: key immer löschen, immer neuanlegen ??
    - name: Delete older keys from the Gitlab instance
      uri: >
        url="{{ bo_gitlab_api }}user/keys"
        method=DELETE
        status_code=201
        HEADER_PRIVATE-TOKEN="{{ bo_gitlab_token }}"
        HEADER_Content-Type="application/json"
        body="{\"title\": \"{{ bo_gitlab_key_title }}\"}"

    # ist noch nicht idempotent, sollte abfragen, ob der Key so noch/schon existiert und diesen updaten/löschen und neu anlegen
    # ggf. auch so: key immer löschen, immer neuanlegen ??
    - name: Push the generated ssh key to the Gitlab instance
      uri: >
        url="{{ bo_gitlab_api }}user/keys"
        method=POST
        status_code=201
        HEADER_PRIVATE-TOKEN="{{ bo_gitlab_token }}"
        HEADER_Content-Type="application/json"
        body="{\"title\": \"{{ bo_gitlab_key_title }}\", \"key\": \"{{ deployer_user_public_key.stdout_lines.0 }}\"}"

#    - name: git clone d115
       
